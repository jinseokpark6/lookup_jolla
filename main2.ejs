<html>
<head>

	<style>
	@import url(http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300);
	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		font-weight: 300;
	}
	body {
		font-family: 'Source Sans Pro', sans-serif;
		color: white;
		font-weight: 300;
	}
	body ::-webkit-input-placeholder {
		/* WebKit browsers */
		font-family: 'Source Sans Pro', sans-serif;
		color: white;
		font-weight: 300;
	}
	body :-moz-placeholder {
		/* Mozilla Firefox 4 to 18 */
		font-family: 'Source Sans Pro', sans-serif;
		color: white;
		opacity: 1;
		font-weight: 300;
	}
	body ::-moz-placeholder {
		/* Mozilla Firefox 19+ */
		font-family: 'Source Sans Pro', sans-serif;
		color: white;
		opacity: 1;
		font-weight: 300;
	}
	body :-ms-input-placeholder {
		/* Internet Explorer 10+ */
		font-family: 'Source Sans Pro', sans-serif;
		color: white;
		font-weight: 300;
	}
	.wrapper {
		/*background: #50a3a2;*/
		background: linear-gradient(135deg, rgba(85,239,203,1) 0%,rgba(30,87,153,1) 0%,rgba(85,239,203,1) 0%,rgba(91,202,255,1) 100%);
		/*background:#B5DAFF;*/
		/*background: -webkit-linear-gradient(top left, #B5DAFF 0%, #B5DAFF 100%);
		background: linear-gradient(to bottom right, #B5DAFF 0%, #B5DAFF 100%);*/
		position: absolute;
		/*top: 50%;*/
		left: 0;
		width: 100%;
		height: 100%;
		/*margin-top: -200px;*/
		overflow: hidden;
	}
	.wrapper.form-success .container h1 {
		-webkit-transform: translateY(85px);
		-ms-transform: translateY(85px);
		transform: translateY(85px);
	}

	.container {
		max-width: 600px;
		margin: 75 auto;
		padding: 80px 0;
		height: 400px;
		text-align: center;
	}
	.container h1 {
		font-size: 40px;
		-webkit-transition-duration: 1s;
		transition-duration: 1s;
		-webkit-transition-timing-function: ease-in-put;
		transition-timing-function: ease-in-put;
		font-weight: 300;
	}

	.main_h {
		font-size: 80px !important;
	}

	.container .projName{
		top: 10px;
		padding: 50px;
		height: 100px;
	}


	form {
		padding: 20px 0;
		position: relative;
		z-index: 2;
	}

	form input {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		outline: 0;
		border: 1px solid rgba(255, 255, 255, 0.4);
		background-color: rgba(255, 255, 255, 0.2);
		width: 250px;
		border-radius: 3px;
		padding: 10px 15px;
		margin: 0 auto 10px auto;
		display: block;
		text-align: center;
		font-size: 18px;
		color: white;
		-webkit-transition-duration: 0.25s;
		transition-duration: 0.25s;
		font-weight: 300;
	}
	form input:hover {
		background-color: rgba(255, 255, 255, 0.4);
	}
	form input:focus {
		background-color: white;
		width: 300px;
		/*color: #53e3a6;*/
		color: #B5DAFF;
	}
	form button {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		outline: 0;
		background-color: white;
		border: 0;
		padding: 10px 15px;
		/*color: #53e3a6;*/
		color: #B5DAFF;
		border-radius: 3px;
		width: 250px;
		cursor: pointer;
		font-size: 18px;
		-webkit-transition-duration: 0.25s;
		transition-duration: 0.25s;
	}
	form button:hover {
		background-color: #f5f7f9;
	}
	.bg-bubbles {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 1;
	}
	.bg-bubbles li {
		position: absolute;
		list-style: none;
		display: block;
		width: 40px;
		height: 40px;
		background-color: rgba(255, 255, 255, 0.15);
		bottom: -160px;
		-webkit-animation: square 25s infinite;
		animation: square 25s infinite;
		-webkit-transition-timing-function: linear;
		transition-timing-function: linear;
	}
	.bg-bubbles li:nth-child(1) {
		left: 10%;
	}
	.bg-bubbles li:nth-child(2) {
		left: 20%;
		width: 80px;
		height: 80px;
		-webkit-animation-delay: 2s;
		animation-delay: 2s;
		-webkit-animation-duration: 17s;
		animation-duration: 17s;
	}
	.bg-bubbles li:nth-child(3) {
		left: 25%;
		-webkit-animation-delay: 4s;
		animation-delay: 4s;
	}
	.bg-bubbles li:nth-child(4) {
		left: 40%;
		width: 60px;
		height: 60px;
		-webkit-animation-duration: 22s;
		animation-duration: 22s;
		background-color: rgba(255, 255, 255, 0.25);
	}
	.bg-bubbles li:nth-child(5) {
		left: 70%;
	}
	.bg-bubbles li:nth-child(6) {
		left: 80%;
		width: 120px;
		height: 120px;
		-webkit-animation-delay: 3s;
		animation-delay: 3s;
		background-color: rgba(255, 255, 255, 0.2);
	}
	.bg-bubbles li:nth-child(7) {
		left: 32%;
		width: 160px;
		height: 160px;
		-webkit-animation-delay: 7s;
		animation-delay: 7s;
	}
	.bg-bubbles li:nth-child(8) {
		left: 55%;
		width: 20px;
		height: 20px;
		-webkit-animation-delay: 15s;
		animation-delay: 15s;
		-webkit-animation-duration: 40s;
		animation-duration: 40s;
	}
	.bg-bubbles li:nth-child(9) {
		left: 25%;
		width: 10px;
		height: 10px;
		-webkit-animation-delay: 2s;
		animation-delay: 2s;
		-webkit-animation-duration: 40s;
		animation-duration: 40s;
		background-color: rgba(255, 255, 255, 0.3);
	}
	.bg-bubbles li:nth-child(10) {
		left: 90%;
		width: 160px;
		height: 160px;
		-webkit-animation-delay: 11s;
		animation-delay: 11s;
	}
	@-webkit-keyframes square {
		0% {
			-webkit-transform: translateY(0);
			transform: translateY(0);
		}
		100% {
			-webkit-transform: translateY(-700px) rotate(600deg);
			transform: translateY(-700px) rotate(600deg);
		}
	}
	@keyframes square {
		0% {
			-webkit-transform: translateY(0);
			transform: translateY(0);
		}
		100% {
			-webkit-transform: translateY(-700px) rotate(600deg);
			transform: translateY(-700px) rotate(600deg);
		}
	}

	.fbut {
		position: absolute;
		z-index: 2;
		padding: 10px;
	}


	</style>
	<!-- <link rel="stylesheet" type="text/css" href="main2.css"> -->


	<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
	<meta charset="utf-8">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
</head>
<body>

	<script>

	var accessToken = "";

	function statusChangeCallback(response) {
		console.log('statusChangeCallback');
		console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
          // Logged into your app and Facebook.
          console.log(response.authResponse);
          accessToken = response.authResponse.accessToken;
          window.location.href = "/logged";
          testAPI();
      } else if (response.status === 'not_authorized') {
          // The person is logged into Facebook, but not your app.
          document.getElementById('status').innerHTML = 'Please log ' +
          'into this app.';
      } else {
          // The person is not logged into Facebook, so we're not sure if
          // they are logged into this app or not.
          document.getElementById('status').innerHTML = 'Please log ' +
          'into Facebook.';
      }
  }

      // This function is called when someone finishes with the Login
      // Button.  See the onlogin handler attached to it in the sample
      // code below.
      function checkLoginState() {
      	FB.getLoginStatus(function(response) {
      		statusChangeCallback(response);
      	});
      }

      function checkFriendList() {
      	FB.api(
      		"/me/friends",
      		function (response) {
      			if (response && !response.error) {
      				console.log(response);
      			}
      		}
      		);
      }

      function getFriendPicture(name, id) {
      	FB.api(
      		"/me/friends",
      		function (response) {
      			if (response && !response.error) {
      				console.log("hiya")
      			}
      		}
      		);
      }

      window.fbAsyncInit = function() {
      	FB.init({
      		appId      : 464318847063621,
          cookie     : true,  // enable cookies to allow the server to access 
                              // the session
          xfbml      : true,  // parse social plugins on this page
          version    : 'v2.2' // use version 2.2
      });

        // Now that we've initialized the JavaScript SDK, we call 
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function(response) {
        	statusChangeCallback(response);
        });

    };

      // Load the SDK asynchronously
      (function(d, s, id) {
      	var js, fjs = d.getElementsByTagName(s)[0];
      	if (d.getElementById(id)) return;
      	js = d.createElement(s); js.id = id;
      	js.src = "//connect.facebook.net/en_US/sdk.js";
      	fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));

      // Here we run a very simple test of the Graph API after login is
      // successful.  See statusChangeCallback() for when this call is made.
      function testAPI() {
      	console.log('Welcome!  Fetching your information.... ');
      	FB.api('/me', function(response) {
      		console.log('Successful login for: ' + response.name);
      		document.getElementById('status').innerHTML =
      		'Thanks for logging in, ' + response.name + '!';
      	});
      	/* make the API call */
      	FB.api(
      		"/me/friends?access_token="+accessToken+"&fields=name,id,picture.width(30)",
      		function (response) {
      			if (response && !response.error) {
      				var loop = response.data.length
      				document.getElementById('friendList').innerHTML += "<br>Friend List <br>";

      				var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      				var labelIndex = 0;

      				for (var i=0; i<loop; i++) {

      					document.getElementById('friendList').innerHTML += '<div><button type="button" class="button"><div class = "round"><img src=' + response.data[i].picture.data.url + '></div>' + response.data[i].name + '</button>' +  ' </div> <br>';

      					console.log("map");
      					console.log(this.map);
      					var pos = {
      						lat: 38.65456038 + 0.001*i,
      						lng: -90.31568859999999 + 0.001*i
      					};

                  // convert lat,long distance into meters
                  var R = 6371000; // metres
                  dlon = this.pos.lng - pos.lng
                  dlat = this.pos.lat - pos.lat
                  a = (Math.sin(dlat/2))^2 + Math.cos(this.pos.lat) * Math.cos(pos.lat) * (Math.sin(dlon/2))^2
                  c = 2 * Math.atan2( Math.sqrt(a), Math.sqrt(1-a) )
                  d = R * c  


                  // var image = {
                  //   url: response.data[i].picture.data.url,
                  //   size: new google.maps.Size(71, 71),
                  //   origin: new google.maps.Point(0, 0),
                  //   anchor: new google.maps.Point(17, 34),
                  //   scaledSize: new google.maps.Size(25, 25)
                  // };

                  var shape = {
                  	coords: [1, 1, 1, 20, 18, 20, 18, 1],
                  	type: 'poly'
                  };


                  console.log(c);
                  console.log(d);

                  if (d < Math.sqrt(100) * 100) {
                  	var marker = new google.maps.Marker({
                  		position: pos,
                  		icon: response.data[i].picture.data.url,
                  		shape: shape,
                  		title: response.data[i].name
                  	});
                  	console.log("marker");
                  	console.log(marker);

                  	marker.setMap(this.map);
                  }

              }
          }
      }
      );
}



document.addEventListener("touchstart", function() {}, false);

</script>
<div class="wrapper">
	<div class="container">
		<span class="projName"><h1 class="main_h"> LookUp </h1></span>
		<h1 class="welc">Locate Those Around You</h1>

		<form class="form">
			<div class=fbBut>
				<fb:login-button scope="public_profile,email" data-size="xlarge" type="submit" onlogin="checkLoginState();" class="fbut">
			</fb:login-button>
		</div>

	</form>
</div>


<ul class="bg-bubbles">
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
	<li></li>
</ul>
</div>
</body>
</html>
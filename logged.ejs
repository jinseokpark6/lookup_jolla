
    <!--<script src="logged.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCC-T2UcAaH-3LtyXb_iBxN4e3wJJD1Qr4&signed_in=true&callback=initMap"
        async defer>
    </script>-->
<!DOCTYPE html>
  <html>
    <head>
      <title>Geolocation</title>
      <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
      <script type ="text/javascript" src="/socket.io/socket.io.js"></script>
      <meta charset="utf-8">
      <style>
      /*html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    #map {
        height: 50%;
    }

    #chat_box {
        width: 500px;
        height: 500px;
        border: 1px solid black;
        overflow: scroll;
    }*/

        /* NOTICE BOARD STYLE*/
  .noticeboard { position: absolute; min-height: 15px; z-index: 2; bottom:0; width: 100vw !important;}
  .noticeboard span { display: none; position: absolute; left: 0;bottom: 0;}
  .noticeboard strong { padding-right: 30px; display: block;bottom:0;}
  /*#notice-next { position: absolute; top: 50px; right: 10px; z-index: 100;bottom:0;}*/
  /*#notice-prev { position: absolute; top: 50px; right: 30px; z-index: 100;bottom:0;}*/


    body {
    overflow: hidden;
    /*background-color: #B5DAFF;*/
    background: linear-gradient(135deg, rgba(85,239,203,1) 0%,rgba(30,87,153,1) 0%,rgba(85,239,203,1) 0%,rgba(91,202,255,1) 100%);
    font-family: sans-serif;
    color: rgb(90,90,90);
    /*background-image: 
    -webkit-linear-gradient(
    90deg, rgba(0,0,0,.1) 50%,
    transparent 25%, transparent 50%,  
    rgba(0,0,0,.1) 50%, rgba(0,0,0,.1) 90%, 
    transparent 75%, transparent);
    background-image: 
    -moz-linear-gradient(
    90deg, rgba(0,0,0,.1) 50%,
    transparent 25%, transparent 50%,  
    rgba(0,0,0,.1) 50%, rgba(0,0,0,.1) 90%, 
    transparent 75%, transparent);
    background-image:
    linear-gradient(
    90deg, rgba(0,0,0,.1) 50%,
    transparent 25%, transparent 50%,  
    rgba(0,0,0,.1) 50%, rgba(0,0,0,.1) 90%, 
    transparent 75%, transparent);
    background-size: 50px 50px;*/
}

.icon{
    position: absolute; 
    width: 500px;
    height: 500px;
    background: url(https://cdn1.iconfinder.com/data/icons/logotypes/32/circle-twitter-256.png) no-repeat;
    background-size: 0px 0px;
    margin: auto; 
    top: 0; left: 0; bottom: 0; right: 0;
    z-index: 3;
  
    -webkit-box-shadow: 
      0 0 0 10px   rgba(255,255,255,.2),
      0 0 25px 2px rgba(0,0,0,.4),
inset 0 0 0 15px   rgba(255,255,155,.4);
    -moz-box-shadow: 
      0 0 0 10px   rgba(255,255,255,.2),
      0 0 25px 2px rgba(0,0,0,.4),
inset 0 0 0 15px   rgba(255,255,155,.4);
    box-shadow: 
      0 0 0 10px   rgba(255,255,255,.2),
      0 0 25px 2px rgba(0,0,0,.4),
inset 0 0 0 15px   rgba(255,255,155,.4);
  
    -webkit-border-radius: 999px; 
    -moz-border-radius: 999px;
    border-radius: 999px;
    /* border-radius: 50% has issues on some mobile browsers */
}

.pulse1 {
    position: absolute;  
    width: 520px;
    height: 520px;
    margin: auto; 
    top: 0; left: 0; bottom: 0; right: 0;
    z-index: 2;
    opacity: 0;
    border: 3px solid rgba(255,255,255,.1);
  
    -webkit-animation: pulsejg1 4s linear infinite;
    -moz-animation: pulsejg1 4s linear infinite;
    animation: pulsejg1 4s linear infinite;
    -webkit-border-radius: 999px;
    -moz-border-radius: 999px;
    border-radius: 999px;
    -webkit-box-shadow: inset 0px 0px 15px 10px rgba(0, 0, 0, .6);
    -moz-box-shadow: inset 0px 0px 15px 10px rgba(0, 0, 0, .6);
    box-shadow: inset 0px 0px 15px 10px rgba(0, 0, 0, .6);
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

.pulse2 {
    position: absolute;
    width: 520px;
    height: 520px;
    margin: auto; 
    top: 0; left: 0; bottom: 0; right: 0;
    z-index: 3;
    opacity: 0;
    border: 1px solid rgba(255,255,255,0);
  
    -webkit-animation: pulsejg2 4s linear infinite;
    -moz-animation: pulsejg2 4s linear infinite;
    animation: pulsejg2 4s linear infinite;
    -webkit-border-radius: 999px;
    -moz-border-radius: 999px;
    border-radius: 999px;
    -webkit-box-shadow: inset 0px 0px 12px 5px rgba(255, 255, 255, .8);
    -moz-box-shadow: inset 0px 0px 12px 5px rgba(255, 255, 255, .8);
    box-shadow: inset 0px 0px 12px 5px rgba(255, 255, 255, .8);
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

@-webkit-keyframes pulsejg1 {
    0% {
        -webkit-transform: scale(.6);
        opacity: 0;
    }

    50% {
        -webkit-transform: scale(.6);
        opacity: 0;
    }

    60% {
        -webkit-transform: scale(.9);
        opacity: .2;
    }

    70% {
        -webkit-transform: scale(1.1);
        opacity: .35;
    }

    80% {
        -webkit-transform: scale(1.25);
        opacity: .2;
    }

    100% {
        -webkit-transform: scale(1.4);
        opacity: 0;
    }
}

@-moz-keyframes pulsejg1 {
    0% {
        -moz-transform: scale(.6);
        opacity: 0;
    }

    50% {
        -moz-transform: scale(.6);
        opacity: 0;
    }

    60% {
        -moz-transform: scale(.9);
        opacity: .2;
    }

    70% {
        -moz-transform: scale(1.1);
        opacity: .35;
    }

    80% {
        -moz-transform: scale(1.25);
        opacity: .2;
    }

    100% {
        -moz-transform: scale(1.4);
        opacity: 0;
    }
}

@keyframes pulsejg1 {
    0% {
        transform: scale(.6);
        opacity: 0;
    }

    50% {
        transform: scale(.6);
        opacity: 0;
    }

    60% {
        transform: scale(.9);
        opacity: .1;
    }

    70% {
        transform: scale(1.1);
        opacity: .25;
    }

    80% {
        transform: scale(1.25);
        opacity: .1;
    }

    100% {
        transform: scale(1.4);
        opacity: 0;
    }
}

@-webkit-keyframes pulsejg2 {
    0% {
        -webkit-transform: scale(.6);
        opacity: 0;
    }

    40% {
        -webkit-transform: scale(.8);
        opacity: .05;
    }

    50% {
        -webkit-transform: scale(1);
        opacity: .1;
    }

    60% {
        -webkit-transform: scale(1.1);
        opacity: .3;
    }

    80% {
        -webkit-transform: scale(1.2);
        opacity: .1;
    }

    100% {
        -webkit-transform: scale(1.3);
        opacity: 0;
    }
}

@-moz-keyframes pulsejg2 {
    0% {
        -moz-transform: scale(.6);
        opacity: 0;
    }

    40% {
        -moz-transform: scale(.8);
        opacity: .05;
    }

    50% {
        -moz-transform: scale(1);
        opacity: .1;
    }

    60% {
        -moz-transform: scale(1.1);
        opacity: .3;
    }

    80% {
        -moz-transform: scale(1.2);
        opacity: .1;
    }

    100% {
        -moz-transform: scale(1.3);
        opacity: 0;
    }
}

@keyframes pulsejg2 {
    0% {
        transform: scale(.6);
        opacity: 0;
    }

    40% {
        transform: scale(.8);
        opacity: .05;
    }

    50% {
        transform: scale(1);
        opacity: .1;
    }

    60% {
        transform: scale(1.1);
        opacity: .3;
    }

    80% {
        transform: scale(1.2);
        opacity: .1;
    }

    100% {
        transform: scale(1.3);
        opacity: 0;
    }
}

.bg-bubbles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}
.bg-bubbles li {
  position: absolute;
  list-style: none;
  display: block;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.15);
  bottom: -160px;
  -webkit-animation: square 25s infinite;
  animation: square 25s infinite;
  -webkit-transition-timing-function: linear;
  transition-timing-function: linear;
}
.bg-bubbles li:nth-child(1) {
  left: 10%;
}
.bg-bubbles li:nth-child(2) {
  left: 20%;
  width: 80px;
  height: 80px;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-duration: 17s;
          animation-duration: 17s;
}
.bg-bubbles li:nth-child(3) {
  left: 25%;
  -webkit-animation-delay: 4s;
          animation-delay: 4s;
}
.bg-bubbles li:nth-child(4) {
  left: 40%;
  width: 60px;
  height: 60px;
  -webkit-animation-duration: 22s;
          animation-duration: 22s;
  background-color: rgba(255, 255, 255, 0.25);
}
.bg-bubbles li:nth-child(5) {
  left: 70%;
}
.bg-bubbles li:nth-child(6) {
  left: 80%;
  width: 120px;
  height: 120px;
  -webkit-animation-delay: 3s;
          animation-delay: 3s;
  background-color: rgba(255, 255, 255, 0.2);
}
.bg-bubbles li:nth-child(7) {
  left: 32%;
  width: 160px;
  height: 160px;
  -webkit-animation-delay: 7s;
          animation-delay: 7s;
}
.bg-bubbles li:nth-child(8) {
  left: 55%;
  width: 20px;
  height: 20px;
  -webkit-animation-delay: 15s;
          animation-delay: 15s;
  -webkit-animation-duration: 40s;
          animation-duration: 40s;
}
.bg-bubbles li:nth-child(9) {
  left: 25%;
  width: 10px;
  height: 10px;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-duration: 40s;
          animation-duration: 40s;
  background-color: rgba(255, 255, 255, 0.3);
}
.bg-bubbles li:nth-child(10) {
  left: 90%;
  width: 160px;
  height: 160px;
  -webkit-animation-delay: 11s;
          animation-delay: 11s;
}
@-webkit-keyframes square {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(-700px) rotate(600deg);
            transform: translateY(-700px) rotate(600deg);
  }
}
@keyframes square {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(-700px) rotate(600deg);
            transform: translateY(-700px) rotate(600deg);
  }
}

.round-button {
    position: absolute;
    width:50px;
    top: 45%;
    left: 80%;
    z-index: 4;
}
.round-button-circle {
    width: 100%;
    height:0;
    padding-bottom: 100%;
    border-radius: 50%;
    border:1px solid #cfdcec;
    overflow:hidden;
    background: url("https://norrishotsprings.com/assets/images/tripAdvisory.png") center no-repeat; 
    background-size: 50px;
    box-shadow: 0 0 1px gray;
    z-index: 4;
    opacity: 0.5;
}
.round-button-circle:hover {
    opacity: 1;
    /*background:#30588e;*/
}
.round-button a {
    z-index: 4;
    display:block;
    float:left;
    width:100%;
    padding-top:50%;
    padding-bottom:50%;
    line-height:1em;
    margin-top:-0.5em;  
}

#map {
    position: absolute;
    top: 15%;
    left:0;
    right:0;
    margin-left:auto;
    margin-right:auto;
    height: 500px;
    width: 500px;
    border-radius: 999px;
    -moz-border-radius: 999px;
    -khtml-border-radius: 999px;
    -webkit-border-radius: 999px;
    z-index: 4;
}


@-webkit-keyframes sheen {
      0% {
        -webkit-transform: skewY(-45deg) translateX(0);
                transform: skewY(-45deg) translateX(0);
      }
      100% {
        -webkit-transform: skewY(-45deg) translateX(12.5em);
                transform: skewY(-45deg) translateX(12.5em);
      }
    }
    @keyframes sheen {
      0% {
        -webkit-transform: skewY(-45deg) translateX(0);
                transform: skewY(-45deg) translateX(0);
      }
      100% {
        -webkit-transform: skewY(-45deg) translateX(12.5em);
                transform: skewY(-45deg) translateX(12.5em);
      }
    }
    .wrapper {
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
    }

    .button {
      padding: 0.45em 0.80em;
      text-align: center;
      text-decoration: none;
      color: #3399FF;
      border: 2px solid rgb(51,153,255);
      font-size: 12px;
      display: inline-block;
      border-radius: 0.3em;
      -webkit-transition: all 0.2s ease-in-out;
              transition: all 0.2s ease-in-out;
      position: relative;
      overflow: hidden;
      background-color: rgb(86, 236, 208);
    }
    .button:before {
      content: "";
      background-color: rgba(255, 255, 255, 0.5);
      height: 100%;
      width: 3em;
      display: block;
      position: absolute;
      top: 0;
      left: -4.5em;
      -webkit-transform: skewX(-45deg) translateX(0);
          -ms-transform: skewX(-45deg) translateX(0);
              transform: skewX(-45deg) translateX(0);
      -webkit-transition: none;
              transition: none;
    }
    .button:hover {
      background-color: #3399FF;
      color: #fff;
      border-bottom: 4px solid #1977b5;
    }
    .button:hover:before {
      /*color: #3399FF;;*/
      color: #3399FF;
      -webkit-transform: skewX(-45deg) translateX(13.5em);
          -ms-transform: skewX(-45deg) translateX(13.5em);
              transform: skewX(-45deg) translateX(13.5em);
      -webkit-transition: all 0.5s ease-in-out;
              transition: all 0.5s ease-in-out;
    }



      .round {
                float: left;
                border-radius: 50%;
                overflow: hidden;
                width: 35px;
                height: 35px;
            }
      .round img {
            display: block;
            /* Stretch 
                  height: 100%;
                  width: 100%; */
            min-width: 100%;
            min-height: 100%;
      }

      #circular {
         border-radius: 999px;
        -moz-border-radius: 999px;
        -khtml-border-radius: 999px;
        -webkit-border-radius: 999px;


      }
.fbut {
    position: absolute;
    z-index: 2;
    top: 10px;
    left: 95%;
}

#friendList {
    position: absolute;
    z-index: 2;
    top: 30%;
}

    </style>
</head>
<body>



  <div class="action-box">
    <!-- NOTICEBOARD NAV -->
<!--     <a href="#" id="notice-prev">«</a>
    <a href="#" id="notice-next">»</a>
 -->    <!-- /NOTICEBOARD NAV -->
    
    <span class="ge"></span>
    <div class="noticeboard" id="noticeboard" style="height: 100px;">

    </div>
  </div>

  <script>

  var today = new Date();
  document.getElementById('noticeboard').innerHTML += "<span style='display: block;' id='time'><font color='blue'><strong>Today</strong></font>" + today + "</span>";

  </script>


  <script>


/*!  NoticeBoard
---------------------------------------------*/
(function($) {

  $.fn.NoticeBoard = function() {


        // Set a timeout
        var timeOut = setTimeout(nextNotice, 3000);

        // pause on hover
        $('.noticeboard').hover(

          function() {
            clearTimeout(timeOut);
          }, function() {
            timeOut = setTimeout(nextNotice, 3000);
          });

        // Next notice function called on timeout or click
        //set a flag that use to be an oberver to listen when the fadeIn done
        var flag = true;
        function nextNotice(event) {
          if(!flag){
            return false;
          }
          clearTimeout(timeOut);

          flag = false;
          timeOut = setTimeout(nextNotice, 3000);

          if ($('.noticeboard span:visible').is('.noticeboard span:last-child')) {
            $('.noticeboard span:visible').fadeOut(300);
            $('.noticeboard span:first-child').fadeIn("slow",function(){
              flag = true;
            });
          }
          else {
            $('.noticeboard span:visible').fadeOut(300).next().fadeIn("slow",function(){
              flag = true;
            });
          }
          return false;
        }

        $('#notice-next').click(nextNotice);
        $('#notice-prev').click(function(event) {

          if(!flag){
            return false;
          }
          clearTimeout(timeOut);

          flag = false;
          timeOut = setTimeout(nextNotice, 5000);


          if ($('.noticeboard span:visible').is('.noticeboard span:first-child')) {
            $('.noticeboard span:visible').fadeOut(300);
            $('.noticeboard span:last-child').fadeIn("slow",function(){
              flag = true;
            });
          }
          else {
           $('.noticeboard span:visible').fadeOut(300).prev().fadeIn("slow",function(){
            flag = true;
          });
         }
         return false;

       });

      };

/*!  
---------------------------------------------*/

})(jQuery);

/*!  OnLoad
---------------------------------------------*/
$(document).ready(function() {

  $('.noticeboard span').hide();
  $('.noticeboard span:first').show();
  $('.noticeboard').NoticeBoard();

});



</script>


  <div id="map"></div>

  <div class="pulse1"></div>
    <div class="pulse2"></div>
    <div class="icon"></div>

    
    <div class="round-button">
      <form class="listform" id="listlist" action="/list2" method="POST">
         <input type="submit" class="round-button-circle" value=""></input>
     </form>
 </div>

 <ul class="bg-bubbles">
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  </ul>


  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCC-T2UcAaH-3LtyXb_iBxN4e3wJJD1Qr4&signed_in=true&callback=initMap"
  async defer>
  </script>

  <script> 
    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see the error "The Geolocation service
    // failed.", it means you probably did not give permission for the browser to
    // locate you.

    this.friendsArray = [];

    // console.log(this.friendsArray);

    
    function get_loc() {
       if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            this.pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
          };
      });
          return this.pos; 
      }
  }

  function get_map() {
    var loc = get_loc();
    this.map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: loc.lat, lng: loc.lng},
      zoom: 15,
      draggable: false,
      zoomControl: false,
      scrollwheel: false,
      panControl: false,
      disableDoubleClickZoom: true

  });
    return this.map;
}

function initMap() {
    this.map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -34.397, lng: 150.644},
      zoom: 15,
      draggable: false,
      zoomControl: false,
      scrollwheel: false,
      panControl: false,
      disableDoubleClickZoom: true
  });

        // var pos = {
        //       lat: position.coords.latitude,
        //       lng: position.coords.longitude
        //     };

        var infoWindow = new google.maps.InfoWindow({map: map});



        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            this.pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
          };

            var input = document.createElement("input");
            input.setAttribute("type", "hidden");
            input.setAttribute("name", "lat");
            input.setAttribute("value", position.coords.latitude);

            var input2 = document.createElement("input");
            input2.setAttribute("type", "hidden");
            input2.setAttribute("name", "lng");
            input2.setAttribute("value", position.coords.longitude);
            //append to form element that you want .
            document.getElementById("listlist").appendChild(input);
            document.getElementById("listlist").appendChild(input2);

            infoWindow.setPosition(pos);
            infoWindow.setContent('ME');
            map.setCenter(pos);


          console.log('THIS.POS');
          console.log(this.pos);

          infoWindow.setPosition(this.pos);
          infoWindow.setContent('ME');
          map.setCenter(this.pos);

            // // Add the circle around you
            // var drawCircle = new google.maps.Circle({
            //   strokeColor: '#FF0000',
            //   strokeOpacity: 0.8,
            //   strokeWeight: 2,
            //   fillColor: '#FF0000',
            //   fillOpacity: 0.35,
            //   map: map,
            //   center: pos,
            //   radius: 1000;
            // });

          var drawCircle = new google.maps.Circle({
            strokeColor: '#0000FF',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#0000FF',
            fillOpacity: 0.35,
            center: pos,
            map: map,
            radius: Math.sqrt(100) * 100
        });

// var marker = new google.maps.Marker({
//   position: pos,
//   map: map,
//   title: 'Hello World!'
// });



          // if (this.friendsArray.length != 0) {
          //   for (var i=0; i<this.friendsArray.length; i++) {
          //                 console.log("hi");
          //   console.log(this.friendsArray[i]);
          //     var marker = new google.maps.Marker({
          //     position: this.friendsArray[i],
          //     map: map,
          //     title: 'Bye World!'
          //     });
          //   }
          // }
          
      }, function() {
          handleLocationError(true, infoWindow, map.getCenter());
      });

} else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
      }




  }






  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
}

var accessToken = "";
var locationsArray = [];
      // This is called with the results from from FB.getLoginStatus().
      function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
          // Logged into your app and Facebook.
          console.log(response.authResponse);
          accessToken = response.authResponse.accessToken;
          testAPI();
      } else if (response.status === 'not_authorized') {
          // The person is logged into Facebook, but not your app.
          document.getElementById('status').innerHTML = 'Please log ' +
          'into this app.';
      } else {
          window.location.href = "/main2";
          // The person is not logged into Facebook, so we're not sure if
          // they are logged into this app or not.
          document.getElementById('status').innerHTML = 'Please log ' +
          'into Facebook.';
      }
  }

      // This function is called when someone finishes with the Login
      // Button.  See the onlogin handler attached to it in the sample
      // code below.
      function checkLoginState() {
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
          if (document.getElementById('friendList').innerHTML != "") {
            document.getElementById('friendList').innerHTML = ""
        }
    });

        get_map();
    }

    function checkFriendList() {
        FB.api(
          "/me/friends",
          function (response) {
            if (response && !response.error) {
              console.log(response);
          }
      }
      );
    }

    function getFriendPicture(name, id) {
        FB.api(
          "/me/friends",
          function (response) {
            if (response && !response.error) {
              console.log("hiya")
          }
      }
      );
    }

    window.fbAsyncInit = function() {
        FB.init({
          appId      : 464318847063621,
          cookie     : true,  // enable cookies to allow the server to access 
                              // the session
          xfbml      : true,  // parse social plugins on this page
          version    : 'v2.2' // use version 2.2
      });

        // Now that we've initialized the JavaScript SDK, we call 
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
      });

    };

      // Load the SDK asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

      // Here we run a very simple test of the Graph API after login is
      // successful.  See statusChangeCallback() for when this call is made.
      
      function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        var pic;
        FB.api('/me/picture', function (response) {
          pic = response.data.url;
        });

        FB.api('/me', function(response) {
          username = response.name;
  
          console.log('Successful login for: ' + response.name);
          // document.getElementById('status').innerHTML =
          // 'Thanks for logging in, ' + response.name + '!';

          document.getElementById('noticeboard').innerHTML += "<span style='display: block;'><strong>Welcome!</strong> Thanks for logging in, " + response.name + "! </span>";


          document.getElementById('username').innerHTML =
          response.name;

          $(document).ready(function() {


            var socket = io.connect();

            var loc2;
            username = document.getElementById("username").innerHTML;

            if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function(position) {
                loc2 = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
              };
              socket.emit("mylocation", {name: username, location: loc2, userid: response.id, photo: pic});
          });
          }
          
          socket.emit("new_log", {name: username});

          socket.on("user_connected", function (data) {
              // $("#chat_box").append("<p>"+ data.message + "</p>");
              document.getElementById('noticeboard').innerHTML += "<span style='display: block;'><strong>Notification</strong>" + response.name + " just logged in the vicinity! </span>";
          })

          socket.on("user_location", function (data) {
            console.log(data);
              var map = get_map();

              var location = get_loc();

              var arrlength = data.locArray.length;

              for(var i=0; i<arrlength; i++) {
                var pos = {
                  lat: data.locArray[i][1]+0.001*i,
                  lng: data.locArray[i][2]+0.001*i
              };

                 var R = 6371000; // metres
                 dlon = parseFloat(location.lng - pos.lng);
                 dlat = parseFloat(location.lat - pos.lat);
                 a = (Math.sin(dlat/2))^2 + Math.cos(location.lat) * Math.cos(pos.lat) * (Math.sin(dlon/2))^2;
                 var neg = Math.abs(1-a);
                 c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(neg));
                 d = R * c;

            
                    var marker = new google.maps.Marker({
                      position: pos,
                      draggable: true,
                      icon: data.locArray[i][5],
                      title: data.locArray[i][3]
                  });
                    
                    marker.setMap(map);
                  
              }
          })


});
});
/* make the API call */
FB.api(
  "/me/friends?access_token="+accessToken+"&fields=name,id,picture.width(35)",
  function (response) {
    if (response && !response.error) {
      var loop = response.data.length
      document.getElementById('friendList').innerHTML += "";

      var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      var labelIndex = 0;

      for (var i=0; i<loop; i++) {

        document.getElementById('friendList').innerHTML += '<div><a href="http://www.facebook.com/messages"><button type="button" class ="button"><div class ="round"><img src=' + response.data[i].picture.data.url + '></div>' + response.data[i].name + '</button></a>' +  ' </div> <br>';


    }
}
});
}


      // $("#refresh").submit(function(e){
      //   e.preventDefault();

      //   var $form = $(this), url = "friends.js";
      // });




</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->
<h1 id="username"></h1>
<fb:login-button autologoutlink="true" scope="public_profile,email" onlogin="checkLoginState();" class="fbut" size="medium">
</fb:login-button>

<div id="status"></div>

<div id="friendList"></div><br><br>
<div id="chat_box"></div>


<div id="status"></div>
<div id="friendList">
</div><br><br>
</body>
</html>